--
-- MULTI_ALTER__TABLE_ADD_CONSTRAINTS
--
-- Test checks whether constraints of distributed tables can be adjusted using
-- the ALTER TABLE ... ADD CONSTRAINT ... command.
ALTER SEQUENCE pg_catalog.pg_dist_shardid_seq RESTART 1400000;
ALTER SEQUENCE pg_catalog.pg_dist_jobid_seq RESTART 1400000;
-- Check "UNIQUE CONSTRAINT"
CREATE TABLE unique_test_table(id int, name varchar(20));
SELECT create_distributed_table('unique_test_table', 'id');
 create_distributed_table 
--------------------------
 
(1 row)

-- Can only add unique constraint on distribution column (or group 
-- of columns including distribution column)
ALTER TABLE unique_test_table ADD CONSTRAINT unn_name UNIQUE(name);
ERROR:  table "unique_test_table" doesn't fulfill constraints
DETAIL:  Distributed relations cannot have UNIQUE, EXCLUDE, or PRIMARY KEY constraints that do not include the partition column (with an equality operator if EXCLUDE).
ALTER TABLE unique_test_table ADD CONSTRAINT unn_id UNIQUE(id);
NOTICE:  using one-phase commit for distributed DDL commands
HINT:  You can enable two-phase commit for extra safety with: SET citus.multi_shard_commit_protocol TO '2pc'
-- Error out from the related shard
INSERT INTO unique_test_table VALUES(1, 'Ahmet');
INSERT INTO unique_test_table VALUES(1, 'Mehmet');
ERROR:  duplicate key value violates unique constraint "unn_id_1400001"
DETAIL:  Key (id)=(1) already exists.
CONTEXT:  while executing command on localhost:57638
ALTER TABLE unique_test_table DROP CONSTRAINT unn_id;
-- Can create unique constraint over multiple columns including
-- distribution column
INSERT INTO unique_test_table VALUES(1, 'Mehmet');
ALTER TABLE unique_test_table ADD CONSTRAINT unn_id UNIQUE(id);
ERROR:  could not create unique index "unn_id_1400001"
DETAIL:  Key (id)=(1) is duplicated.
CONTEXT:  while executing command on localhost:57637
ALTER TABLE unique_test_table ADD CONSTRAINT unn_id_name UNIQUE(id, name);
INSERT INTO unique_test_table VALUES(1, 'Mehmet');
ERROR:  duplicate key value violates unique constraint "unn_id_name_1400001"
DETAIL:  Key (id, name)=(1, Mehmet) already exists.
CONTEXT:  while executing command on localhost:57638
DROP TABLE unique_test_table;
-- Check "CHECK CONSTRAINT"
CREATE TABLE products (
    product_no integer,
    name text,
    price numeric,
    discounted_price numeric
);
SELECT create_distributed_table('products', 'product_no');
 create_distributed_table 
--------------------------
 
(1 row)

-- Can add column and table constraints
ALTER TABLE products ADD CONSTRAINT p_check CHECK(price > 0);
ALTER TABLE products ADD CONSTRAINT p_multi_check CHECK(price > discounted_price);
-- Error out from the related shard.
INSERT INTO products VALUES(1, 'product_1', -1, -2);
ERROR:  new row for relation "products_1400033" violates check constraint "p_check_1400033"
DETAIL:  Failing row contains (1, product_1, -1, -2).
CONTEXT:  while executing command on localhost:57638
INSERT INTO products VALUES(1, 'product_1', 5, 3);
INSERT INTO products VALUES(1, 'product_1', 2, 3);
ERROR:  new row for relation "products_1400033" violates check constraint "p_multi_check_1400033"
DETAIL:  Failing row contains (1, product_1, 2, 3).
CONTEXT:  while executing command on localhost:57638
DROP TABLE products;
-- Check "PRIMARY KEY CONSTRAINT"
CREATE TABLE products (
    product_no integer,
    name text,
    price numeric
);
SELECT create_distributed_table('products', 'product_no');
 create_distributed_table 
--------------------------
 
(1 row)

-- Can add PRIMARY KEY to columns including distribution column
ALTER TABLE products ADD CONSTRAINT p_key PRIMARY KEY(name); 
ERROR:  table "products" doesn't fulfill constraints
DETAIL:  Distributed relations cannot have UNIQUE, EXCLUDE, or PRIMARY KEY constraints that do not include the partition column (with an equality operator if EXCLUDE).
ALTER TABLE products ADD CONSTRAINT p_key PRIMARY KEY(product_no);
-- Error out from the related shard
INSERT INTO products VALUES(1, 'product_1', 1);
INSERT INTO products VALUES(1, 'product_1', 1);
ERROR:  duplicate key value violates unique constraint "p_key_1400065"
DETAIL:  Key (product_no)=(1) already exists.
CONTEXT:  while executing command on localhost:57638
drop table products;
-- Check "EXCLUSION CONSTRAINT"
-- Check "FOREIGN CONSTRAINT"
CREATE TABLE products (
    product_no integer PRIMARY KEY,
    to_ref_id integer,
    name text,
    price numeric
);
CREATE TABLE for_orders (
    order_id integer,
    to_ref_id integer,
    product_no integer,
    quantity integer
);
SELECT create_distributed_table('products', 'product_no');
 create_distributed_table 
--------------------------
 
(1 row)

SELECT create_distributed_table('for_orders', 'product_no');
 create_distributed_table 
--------------------------
 
(1 row)

SET citus.shard_replication_factor = 1;
ALTER TABLE for_orders ADD CONSTRAINT f_key FOREIGN KEY (product_no) REFERENCES products (product_no);
ERROR:  cannot create foreign key constraint
DETAIL:  Citus Community Edition currently supports foreign key constraints only for "citus.shard_replication_factor = 1".
HINT:  Please change "citus.shard_replication_factor to 1". To learn more about using foreign keys with other replication factors, please contact us at https://citusdata.com/about/contact_us.
INSERT INTO products VALUES(1, 1, 'product_1', 5);
INSERT INTO for_orders VALUES(1, 1, 1, 5);
-- Error out from the related shard
INSERT INTO for_orders VALUES(1, 1, 2, 5);
DROP TABLE products CASCADE;
DROP TABLE for_orders;
